\u srgp
--
UPDATE srgp_voters
SET    v_leaflet_num=0
;
--
UPDATE srgp_voters
SET    v_leaflet_num=1
WHERE  v_Address_Line_4='Other Electors'
;
--
DROP PROCEDURE IF EXISTS add_unique_postal_address
; 
--
DELIMITER //
--
CREATE PROCEDURE add_unique_postal_address()
BEGIN
--
DECLARE  done                           INT DEFAULT 0;   -- Used to break out of record loops
DECLARE  dummy                          TINYINT;
DECLARE  pv_id                          INTEGER(7);
--
DECLARE cur_min_id_at_address_postal CURSOR FOR 
 (
  SELECT    t1.a
  FROM    ( SELECT   MIN(v_id)          a
            FROM     srgp_voters 
            WHERE    v_leaflet_num=0
            AND      v_import_source='A'
            GROUP BY v_Address_md5
          ) t1 
  ORDER BY  t1.a
  )
;
--
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
--
OPEN cur_min_id_at_address_postal;
--
read_loop: LOOP
  --
  FETCH cur_min_id_at_address_postal INTO pv_id;
  --
  IF done THEN
    LEAVE read_loop;
  END IF;
  -- 
  UPDATE srgp_voters
  SET    v_leaflet_num=2
  WHERE  v_id=pv_id
  ;
  --
END LOOP;

CLOSE cur_min_id_at_address_postal; 
 
END //

delimiter ;

CALL add_unique_postal_address();
--
--
--
--
--
DROP PROCEDURE IF EXISTS Insert_srgp_leaflet1
; 
--
DELIMITER //
--
CREATE PROCEDURE Insert_srgp_leaflet1()
BEGIN
/* Updates addresses to a 3 if no-one at that address is already a 2
*/

DECLARE  done                           INT DEFAULT 0;   -- Used to break out of record loops
DECLARE  v_count_at_address             TINYINT;
DECLARE  v_address_hash                 CHAR(32);
DECLARE  vo_id                          INTEGER(7);
DECLARE  v_leaflet_level                TINYINT;
--
DECLARE cur_srgp_voters CURSOR FOR 
 (
  SELECT    t1.a
          , t1.b 
          , t1.c  
          , t1.d
  FROM    ( SELECT   COUNT(1)            a
                   , v_Address_md5       b 
                   , MIN(v_id)           c
                   , MAX(v_leaflet_num)  d
            FROM     srgp_voters 
            GROUP BY v_Address_md5
          ) t1 
  ORDER BY  t1.a
  )
;
--
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
--
OPEN cur_srgp_voters;
--
read_loop: LOOP
  --
  FETCH cur_srgp_voters INTO v_count_at_address, v_address_hash, vo_id, v_leaflet_level;
  --
  IF done THEN
    LEAVE read_loop;
  END IF;
  -- 
  IF v_leaflet_level=0 THEN
    CASE
      WHEN v_count_at_address=1 THEN
        --
        UPDATE   srgp_voters 
        SET      v_leaflet_num=3
        WHERE    v_Address_md5=v_address_hash
        ; 
        --
      WHEN (v_count_at_address>1 AND v_count_at_address<10) THEN 
        --
        UPDATE   srgp_voters 
        SET      v_leaflet_num=3
        WHERE    v_Address_md5=v_address_hash
        AND      v_id=vo_id
        ;
        -- 
      WHEN (v_count_at_address>=10) THEN
        --
        UPDATE   srgp_voters 
        SET      v_leaflet_num=3
        WHERE    v_Address_md5=v_address_hash
        AND      v_id=vo_id
        ;
        --
    END CASE;
  --
  END IF;
--
END LOOP;

CLOSE cur_srgp_voters; 
 
END //

delimiter ;

CALL Insert_srgp_leaflet1();

\q
